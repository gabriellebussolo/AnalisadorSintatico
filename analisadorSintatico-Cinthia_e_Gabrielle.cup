import java_cup.runtime.*;

/* Parser code to change the way the parser reports errors (include
   line and column number of the error). */
parser code {:
    public boolean syntaxErrors;

    public void syntax_error(Symbol current_token) {
        report_error(
            "Syntax error at line " + (current_token.left+1) + ", column "
            + current_token.right, null
        );
    }
:};

// Declara as variaveis nao terminais

terminal CLASSE;   															// Classe
terminal BOOL, INT, VOID;   												// Tipos
terminal CONDICIONAL;        						  						// Operador condicional
terminal CONSTANTE, ID, NUMERO;                                             // Constante, identificador e numero
terminal RETORNO;                                                           // Retorno
terminal OPLOGICO, OPARITMETICO, OPRELACIONAL;                              // Operadores
terminal IGUAL, PARESQ, PARDIR, CHAVEESQ, CHAVEDIR, PONTOEVIRGULA, VIRGULA; // Pontuacao

// Define a precendencia

precedence left OPARITMETICO;
precedence nonassoc OPRELACIONAL;

//Define a gramatica

declaracaoClasse ::= CHAVEESQ CLASSE ID declaracaoAtributo declaracaoMetodo CHAVEDIR

declaracaoAtributo ::= tipoAtributo ID PONTOEVIRGULA;

argumentos ::= tipoAtributo ID VIRGULA argumentos
             | tipoAtributo ID
             | /* vazio */; //nao sei como definir isso, mas acho que precisa ter o vazio caso a declaracao de metodo nao tenha argumentos

tipoAtributo ::= BOOL | INT;
tipoMetodo ::= BOOL | INT | VOID;

declaracaoMetodo ::= tipoMetodo ID PARESQ argumentos PARDIR CHAVEESQ comandos CHAVEDIR;

comandos ::= comando PONTOEVIRGULA comandos
           | comando PONTOEVIRGULA;

comando ::= ID IGUAL expressao
          | CONDICIONAL PARESQ expressaoBooleana PARDIR comandos
          | CONDICIONAL PARESQ expressaoBooleana PARDIR comandos ELSE comandos
          | RETORNO expressao;

expressao ::= expressaoAritmetica
            | expressaoBooleana

expressaoAritmetica ::= NUMERO
                      | ID
                      | expressaoAritmetica OPARITMETICO expressaoAritmetica;

expressaoBooleana ::= CONSTANTE
                    | ID
                    | expressaoBooleana OPLOGICO expressaoBooleana
                    | expressaoBooleana OPRELACIONAL expressaoBooleana;


//chamadaDeMetodo ??